syntax = "proto3";
package news;
option go_package = "./news";
import "google/api/annotations.proto";

// Запрос всех новостей
message GetNewsRequest {}

// Запрос новости по Id
message GetNewsByIdRequest {
    int32 id = 1;
}

// Запрос новостей по категориям
message GetNewsByCategoryRequest {
    string categories = 1;
}

// Запрос на добавление новости
message AddNewsRequest {
    string title = 2;
    string text = 3;
    string datetime = 4;
    string categories = 5;
}

// Запрос на удаление новости
message DelNewsRequest {
    int32 id = 1;
}


// Вывод всех/категоризированных новостей
message GetNewsResponse {
    map<string, GetNewsItem> news = 1;
}
message GetNewsItem {
    int32 id = 1;
    string title = 2;
    string text = 3;
    string datetime = 4;
    string categories = 5;
}

// Вывод новости по Id
message GetNewsByIdResponse {
    string title = 2;
    string text = 3;
    string datetime = 4;
    string categories = 5;
}

// Добавление новости
message AddNewsResponse {
    int32 id = 1;
    string err = 2;
}

// Удаление новости
message DelNewsResponse {
    string err = 1;
}

service NewsService {
    rpc GetNews(GetNewsRequest) returns (GetNewsResponse) {
        option (google.api.http) = {
            get: "/news"
        };
    }
    rpc GetNewsById(GetNewsByIdRequest) returns (GetNewsByIdResponse) {
        option (google.api.http) = {
            get: "/news/id/{id}"
        };
    }
    rpc GetNewsByCategory(GetNewsByCategoryRequest) returns (GetNewsResponse) {
        option (google.api.http) = {
            get: "/news/category/{category}"
        };
    }
    rpc AddNews(AddNewsRequest) returns (AddNewsResponse) {
        option (google.api.http) = {
            post: "/news/add"
            body: "*"
        };
    }
    rpc DelNews(DelNewsRequest) returns (DelNewsResponse) {
        option (google.api.http) = {
            delete: "/news/del/{id}"
        };
    }
}
