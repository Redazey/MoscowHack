// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.3
// source: vacancies.proto

package vacancies

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос всех вакансий
type GetVacanciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVacanciesRequest) Reset() {
	*x = GetVacanciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVacanciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacanciesRequest) ProtoMessage() {}

func (x *GetVacanciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacanciesRequest.ProtoReflect.Descriptor instead.
func (*GetVacanciesRequest) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{0}
}

// Запрос вакансии по Id
type GetVacanciesByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVacanciesByIdRequest) Reset() {
	*x = GetVacanciesByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVacanciesByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacanciesByIdRequest) ProtoMessage() {}

func (x *GetVacanciesByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacanciesByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVacanciesByIdRequest) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{1}
}

func (x *GetVacanciesByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Запрос отфильтрованных вакансий
type GetFilterVacanciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepartmentCompany   string `protobuf:"bytes,1,opt,name=departmentCompany,proto3" json:"departmentCompany,omitempty"`
	CategoryVacancies   string `protobuf:"bytes,2,opt,name=categoryVacancies,proto3" json:"categoryVacancies,omitempty"`
	ExperienceStartYear int32  `protobuf:"varint,3,opt,name=experienceStartYear,proto3" json:"experienceStartYear,omitempty"`
	ExperienceEndYear   int32  `protobuf:"varint,4,opt,name=experienceEndYear,proto3" json:"experienceEndYear,omitempty"`
	EducationId         int32  `protobuf:"varint,5,opt,name=educationId,proto3" json:"educationId,omitempty"`
	Salary              int32  `protobuf:"varint,6,opt,name=salary,proto3" json:"salary,omitempty"`
	WorkHoursPerDay     int32  `protobuf:"varint,7,opt,name=workHoursPerDay,proto3" json:"workHoursPerDay,omitempty"`
	WorkSchedule        string `protobuf:"bytes,8,opt,name=workSchedule,proto3" json:"workSchedule,omitempty"`
	SalaryTaxIncluded   bool   `protobuf:"varint,9,opt,name=salaryTaxIncluded,proto3" json:"salaryTaxIncluded,omitempty"`
	GeolocationCompany  string `protobuf:"bytes,10,opt,name=geolocationCompany,proto3" json:"geolocationCompany,omitempty"`
}

func (x *GetFilterVacanciesRequest) Reset() {
	*x = GetFilterVacanciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilterVacanciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilterVacanciesRequest) ProtoMessage() {}

func (x *GetFilterVacanciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilterVacanciesRequest.ProtoReflect.Descriptor instead.
func (*GetFilterVacanciesRequest) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{2}
}

func (x *GetFilterVacanciesRequest) GetDepartmentCompany() string {
	if x != nil {
		return x.DepartmentCompany
	}
	return ""
}

func (x *GetFilterVacanciesRequest) GetCategoryVacancies() string {
	if x != nil {
		return x.CategoryVacancies
	}
	return ""
}

func (x *GetFilterVacanciesRequest) GetExperienceStartYear() int32 {
	if x != nil {
		return x.ExperienceStartYear
	}
	return 0
}

func (x *GetFilterVacanciesRequest) GetExperienceEndYear() int32 {
	if x != nil {
		return x.ExperienceEndYear
	}
	return 0
}

func (x *GetFilterVacanciesRequest) GetEducationId() int32 {
	if x != nil {
		return x.EducationId
	}
	return 0
}

func (x *GetFilterVacanciesRequest) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetFilterVacanciesRequest) GetWorkHoursPerDay() int32 {
	if x != nil {
		return x.WorkHoursPerDay
	}
	return 0
}

func (x *GetFilterVacanciesRequest) GetWorkSchedule() string {
	if x != nil {
		return x.WorkSchedule
	}
	return ""
}

func (x *GetFilterVacanciesRequest) GetSalaryTaxIncluded() bool {
	if x != nil {
		return x.SalaryTaxIncluded
	}
	return false
}

func (x *GetFilterVacanciesRequest) GetGeolocationCompany() string {
	if x != nil {
		return x.GeolocationCompany
	}
	return ""
}

// Запрос на добавление вакансии
type AddVacanciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentCompany  string `protobuf:"bytes,2,opt,name=departmentCompany,proto3" json:"departmentCompany,omitempty"`
	Description        string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CategoryVacancies  string `protobuf:"bytes,4,opt,name=categoryVacancies,proto3" json:"categoryVacancies,omitempty"`
	ExperienceYears    int32  `protobuf:"varint,5,opt,name=experienceYears,proto3" json:"experienceYears,omitempty"`
	EducationId        int32  `protobuf:"varint,6,opt,name=educationId,proto3" json:"educationId,omitempty"`
	WorkMode           bool   `protobuf:"varint,7,opt,name=workMode,proto3" json:"workMode,omitempty"`
	Salary             int32  `protobuf:"varint,8,opt,name=salary,proto3" json:"salary,omitempty"`
	WorkHoursPerDay    int32  `protobuf:"varint,9,opt,name=workHoursPerDay,proto3" json:"workHoursPerDay,omitempty"`
	WorkSchedule       string `protobuf:"bytes,10,opt,name=workSchedule,proto3" json:"workSchedule,omitempty"`
	SalaryTaxIncluded  bool   `protobuf:"varint,11,opt,name=salaryTaxIncluded,proto3" json:"salaryTaxIncluded,omitempty"`
	GeolocationCompany string `protobuf:"bytes,12,opt,name=geolocationCompany,proto3" json:"geolocationCompany,omitempty"`
	Skills             string `protobuf:"bytes,13,opt,name=skills,proto3" json:"skills,omitempty"`
	BackendStack       string `protobuf:"bytes,14,opt,name=backendStack,proto3" json:"backendStack,omitempty"`
	FrontendStack      string `protobuf:"bytes,15,opt,name=frontendStack,proto3" json:"frontendStack,omitempty"`
	DatabaseStack      string `protobuf:"bytes,16,opt,name=databaseStack,proto3" json:"databaseStack,omitempty"`
}

func (x *AddVacanciesRequest) Reset() {
	*x = AddVacanciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVacanciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVacanciesRequest) ProtoMessage() {}

func (x *AddVacanciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVacanciesRequest.ProtoReflect.Descriptor instead.
func (*AddVacanciesRequest) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{3}
}

func (x *AddVacanciesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddVacanciesRequest) GetDepartmentCompany() string {
	if x != nil {
		return x.DepartmentCompany
	}
	return ""
}

func (x *AddVacanciesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddVacanciesRequest) GetCategoryVacancies() string {
	if x != nil {
		return x.CategoryVacancies
	}
	return ""
}

func (x *AddVacanciesRequest) GetExperienceYears() int32 {
	if x != nil {
		return x.ExperienceYears
	}
	return 0
}

func (x *AddVacanciesRequest) GetEducationId() int32 {
	if x != nil {
		return x.EducationId
	}
	return 0
}

func (x *AddVacanciesRequest) GetWorkMode() bool {
	if x != nil {
		return x.WorkMode
	}
	return false
}

func (x *AddVacanciesRequest) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *AddVacanciesRequest) GetWorkHoursPerDay() int32 {
	if x != nil {
		return x.WorkHoursPerDay
	}
	return 0
}

func (x *AddVacanciesRequest) GetWorkSchedule() string {
	if x != nil {
		return x.WorkSchedule
	}
	return ""
}

func (x *AddVacanciesRequest) GetSalaryTaxIncluded() bool {
	if x != nil {
		return x.SalaryTaxIncluded
	}
	return false
}

func (x *AddVacanciesRequest) GetGeolocationCompany() string {
	if x != nil {
		return x.GeolocationCompany
	}
	return ""
}

func (x *AddVacanciesRequest) GetSkills() string {
	if x != nil {
		return x.Skills
	}
	return ""
}

func (x *AddVacanciesRequest) GetBackendStack() string {
	if x != nil {
		return x.BackendStack
	}
	return ""
}

func (x *AddVacanciesRequest) GetFrontendStack() string {
	if x != nil {
		return x.FrontendStack
	}
	return ""
}

func (x *AddVacanciesRequest) GetDatabaseStack() string {
	if x != nil {
		return x.DatabaseStack
	}
	return ""
}

// Запрос на удаление вакансии
type DelVacanciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DelVacanciesRequest) Reset() {
	*x = DelVacanciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelVacanciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelVacanciesRequest) ProtoMessage() {}

func (x *DelVacanciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelVacanciesRequest.ProtoReflect.Descriptor instead.
func (*DelVacanciesRequest) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{4}
}

func (x *DelVacanciesRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Вывод всех/отфильтрованных вакансий
type GetVacanciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vacancies map[string]*GetVacanciesItem `protobuf:"bytes,1,rep,name=vacancies,proto3" json:"vacancies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetVacanciesResponse) Reset() {
	*x = GetVacanciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVacanciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacanciesResponse) ProtoMessage() {}

func (x *GetVacanciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacanciesResponse.ProtoReflect.Descriptor instead.
func (*GetVacanciesResponse) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{5}
}

func (x *GetVacanciesResponse) GetVacancies() map[string]*GetVacanciesItem {
	if x != nil {
		return x.Vacancies
	}
	return nil
}

type GetVacanciesItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentCompany  string `protobuf:"bytes,3,opt,name=departmentCompany,proto3" json:"departmentCompany,omitempty"`
	Description        string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CategoryVacancies  string `protobuf:"bytes,5,opt,name=categoryVacancies,proto3" json:"categoryVacancies,omitempty"`
	Requirements       string `protobuf:"bytes,6,opt,name=requirements,proto3" json:"requirements,omitempty"`
	WorkingConditions  string `protobuf:"bytes,7,opt,name=workingConditions,proto3" json:"workingConditions,omitempty"`
	GeolocationCompany string `protobuf:"bytes,8,opt,name=geolocationCompany,proto3" json:"geolocationCompany,omitempty"`
}

func (x *GetVacanciesItem) Reset() {
	*x = GetVacanciesItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVacanciesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacanciesItem) ProtoMessage() {}

func (x *GetVacanciesItem) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacanciesItem.ProtoReflect.Descriptor instead.
func (*GetVacanciesItem) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{6}
}

func (x *GetVacanciesItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetVacanciesItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVacanciesItem) GetDepartmentCompany() string {
	if x != nil {
		return x.DepartmentCompany
	}
	return ""
}

func (x *GetVacanciesItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetVacanciesItem) GetCategoryVacancies() string {
	if x != nil {
		return x.CategoryVacancies
	}
	return ""
}

func (x *GetVacanciesItem) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *GetVacanciesItem) GetWorkingConditions() string {
	if x != nil {
		return x.WorkingConditions
	}
	return ""
}

func (x *GetVacanciesItem) GetGeolocationCompany() string {
	if x != nil {
		return x.GeolocationCompany
	}
	return ""
}

// Вывод вакансий по Id
type GetVacanciesByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DepartmentCompany  string `protobuf:"bytes,3,opt,name=departmentCompany,proto3" json:"departmentCompany,omitempty"`
	Description        string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CategoryVacancies  string `protobuf:"bytes,5,opt,name=categoryVacancies,proto3" json:"categoryVacancies,omitempty"`
	ExperienceYears    int32  `protobuf:"varint,6,opt,name=experienceYears,proto3" json:"experienceYears,omitempty"`
	EducationName      string `protobuf:"bytes,7,opt,name=educationName,proto3" json:"educationName,omitempty"`
	WorkMode           bool   `protobuf:"varint,8,opt,name=workMode,proto3" json:"workMode,omitempty"`
	Salary             int32  `protobuf:"varint,9,opt,name=salary,proto3" json:"salary,omitempty"`
	WorkHoursPerDay    int32  `protobuf:"varint,10,opt,name=workHoursPerDay,proto3" json:"workHoursPerDay,omitempty"`
	WorkSchedule       string `protobuf:"bytes,11,opt,name=workSchedule,proto3" json:"workSchedule,omitempty"`
	SalaryTaxIncluded  bool   `protobuf:"varint,12,opt,name=salaryTaxIncluded,proto3" json:"salaryTaxIncluded,omitempty"`
	GeolocationCompany string `protobuf:"bytes,13,opt,name=geolocationCompany,proto3" json:"geolocationCompany,omitempty"`
	Skills             string `protobuf:"bytes,14,opt,name=skills,proto3" json:"skills,omitempty"`
	BackendStack       string `protobuf:"bytes,15,opt,name=backendStack,proto3" json:"backendStack,omitempty"`
	FrontendStack      string `protobuf:"bytes,16,opt,name=frontendStack,proto3" json:"frontendStack,omitempty"`
	DatabaseStack      string `protobuf:"bytes,17,opt,name=databaseStack,proto3" json:"databaseStack,omitempty"`
}

func (x *GetVacanciesByIdResponse) Reset() {
	*x = GetVacanciesByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVacanciesByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVacanciesByIdResponse) ProtoMessage() {}

func (x *GetVacanciesByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVacanciesByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVacanciesByIdResponse) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{7}
}

func (x *GetVacanciesByIdResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetDepartmentCompany() string {
	if x != nil {
		return x.DepartmentCompany
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetCategoryVacancies() string {
	if x != nil {
		return x.CategoryVacancies
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetExperienceYears() int32 {
	if x != nil {
		return x.ExperienceYears
	}
	return 0
}

func (x *GetVacanciesByIdResponse) GetEducationName() string {
	if x != nil {
		return x.EducationName
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetWorkMode() bool {
	if x != nil {
		return x.WorkMode
	}
	return false
}

func (x *GetVacanciesByIdResponse) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetVacanciesByIdResponse) GetWorkHoursPerDay() int32 {
	if x != nil {
		return x.WorkHoursPerDay
	}
	return 0
}

func (x *GetVacanciesByIdResponse) GetWorkSchedule() string {
	if x != nil {
		return x.WorkSchedule
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetSalaryTaxIncluded() bool {
	if x != nil {
		return x.SalaryTaxIncluded
	}
	return false
}

func (x *GetVacanciesByIdResponse) GetGeolocationCompany() string {
	if x != nil {
		return x.GeolocationCompany
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetSkills() string {
	if x != nil {
		return x.Skills
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetBackendStack() string {
	if x != nil {
		return x.BackendStack
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetFrontendStack() string {
	if x != nil {
		return x.FrontendStack
	}
	return ""
}

func (x *GetVacanciesByIdResponse) GetDatabaseStack() string {
	if x != nil {
		return x.DatabaseStack
	}
	return ""
}

// Вывод Id добавленной новости
type AddVacanciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Err string `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *AddVacanciesResponse) Reset() {
	*x = AddVacanciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVacanciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVacanciesResponse) ProtoMessage() {}

func (x *AddVacanciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVacanciesResponse.ProtoReflect.Descriptor instead.
func (*AddVacanciesResponse) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{8}
}

func (x *AddVacanciesResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddVacanciesResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Вывод ошибки об удалении новости
type DelVacanciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err string `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *DelVacanciesResponse) Reset() {
	*x = DelVacanciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vacancies_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelVacanciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelVacanciesResponse) ProtoMessage() {}

func (x *DelVacanciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vacancies_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelVacanciesResponse.ProtoReflect.Descriptor instead.
func (*DelVacanciesResponse) Descriptor() ([]byte, []int) {
	return file_vacancies_proto_rawDescGZIP(), []int{9}
}

func (x *DelVacanciesResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

var File_vacancies_proto protoreflect.FileDescriptor

var file_vacancies_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x03, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x45,
	0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72,
	0x44, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48,
	0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x54, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x54, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xdb, 0x04, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x54, 0x61,
	0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x54, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x24,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x76, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63,
	0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x59, 0x0a, 0x0e, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xb6, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xe4, 0x04, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x59, 0x65, 0x61, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x28, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x44,
	0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x54, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x54, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x67,
	0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x22, 0x38, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x28, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x32, 0xc7, 0x04, 0x0a, 0x10, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x77, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x61, 0x63, 0x61,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x24, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x12, 0x11, 0x2f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x56, 0x61,
	0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x61, 0x64, 0x64, 0x12, 0x6c, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x56, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x76,
	0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x76, 0x61, 0x63, 0x61, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vacancies_proto_rawDescOnce sync.Once
	file_vacancies_proto_rawDescData = file_vacancies_proto_rawDesc
)

func file_vacancies_proto_rawDescGZIP() []byte {
	file_vacancies_proto_rawDescOnce.Do(func() {
		file_vacancies_proto_rawDescData = protoimpl.X.CompressGZIP(file_vacancies_proto_rawDescData)
	})
	return file_vacancies_proto_rawDescData
}

var file_vacancies_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_vacancies_proto_goTypes = []interface{}{
	(*GetVacanciesRequest)(nil),       // 0: vacancies.GetVacanciesRequest
	(*GetVacanciesByIdRequest)(nil),   // 1: vacancies.GetVacanciesByIdRequest
	(*GetFilterVacanciesRequest)(nil), // 2: vacancies.GetFilterVacanciesRequest
	(*AddVacanciesRequest)(nil),       // 3: vacancies.AddVacanciesRequest
	(*DelVacanciesRequest)(nil),       // 4: vacancies.DelVacanciesRequest
	(*GetVacanciesResponse)(nil),      // 5: vacancies.GetVacanciesResponse
	(*GetVacanciesItem)(nil),          // 6: vacancies.GetVacanciesItem
	(*GetVacanciesByIdResponse)(nil),  // 7: vacancies.GetVacanciesByIdResponse
	(*AddVacanciesResponse)(nil),      // 8: vacancies.AddVacanciesResponse
	(*DelVacanciesResponse)(nil),      // 9: vacancies.DelVacanciesResponse
	nil,                               // 10: vacancies.GetVacanciesResponse.VacanciesEntry
}
var file_vacancies_proto_depIdxs = []int32{
	10, // 0: vacancies.GetVacanciesResponse.vacancies:type_name -> vacancies.GetVacanciesResponse.VacanciesEntry
	6,  // 1: vacancies.GetVacanciesResponse.VacanciesEntry.value:type_name -> vacancies.GetVacanciesItem
	0,  // 2: vacancies.VacanciesService.GetVacancies:input_type -> vacancies.GetVacanciesRequest
	1,  // 3: vacancies.VacanciesService.GetVacanciesById:input_type -> vacancies.GetVacanciesByIdRequest
	2,  // 4: vacancies.VacanciesService.GetVacanciesByFilter:input_type -> vacancies.GetFilterVacanciesRequest
	3,  // 5: vacancies.VacanciesService.AddVacancies:input_type -> vacancies.AddVacanciesRequest
	4,  // 6: vacancies.VacanciesService.DelVacancies:input_type -> vacancies.DelVacanciesRequest
	5,  // 7: vacancies.VacanciesService.GetVacancies:output_type -> vacancies.GetVacanciesResponse
	7,  // 8: vacancies.VacanciesService.GetVacanciesById:output_type -> vacancies.GetVacanciesByIdResponse
	5,  // 9: vacancies.VacanciesService.GetVacanciesByFilter:output_type -> vacancies.GetVacanciesResponse
	8,  // 10: vacancies.VacanciesService.AddVacancies:output_type -> vacancies.AddVacanciesResponse
	9,  // 11: vacancies.VacanciesService.DelVacancies:output_type -> vacancies.DelVacanciesResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_vacancies_proto_init() }
func file_vacancies_proto_init() {
	if File_vacancies_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vacancies_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVacanciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVacanciesByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilterVacanciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVacanciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelVacanciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVacanciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVacanciesItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVacanciesByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVacanciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vacancies_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelVacanciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vacancies_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vacancies_proto_goTypes,
		DependencyIndexes: file_vacancies_proto_depIdxs,
		MessageInfos:      file_vacancies_proto_msgTypes,
	}.Build()
	File_vacancies_proto = out.File
	file_vacancies_proto_rawDesc = nil
	file_vacancies_proto_goTypes = nil
	file_vacancies_proto_depIdxs = nil
}
